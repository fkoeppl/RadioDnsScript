#!/bin/bash
###############################################################################
# Script for doing RadioDNS lookup for a list of stations                     #
# Input: bearer id csv file                                                   #
# Output: result.xml                                                          #
# ########################################################################### #
# ver | date       | usr | description                                        #
# ----------------------------------------------------------------------------#
# 0.1 | 17.12.2017 | FKL | Initial version                                    #
# ########################################################################### #
# TODO:
#

# ID Examples:
# Bayern 3
#SVC_ID="0.d313.10a5.de0.dab"
# Antenne Bayern
#SVC_ID="0.d318.10a5.de0.dab"
# Bayern 1 Franken
#SVC_ID="0.d511.1162.de0.dab"
# Absolut Hot
#SVC_ID="0.dc1a.1162.de0.dab"

#idfile="eu_dab.csv"
#idfile="aus_dab.csv"
idfile="test_ids.csv"
xmlfile="test_output.xml"
csvfile="test_output.csv"
DATE=`date`

# Create xml file and header
echo '<?xml version="1.0" encoding="ISO-8859-1" ?>' > $xmlfile
echo '<?xml-stylesheet type="text/xsl" href="radiodnslist.xslt"?>' >> $xmlfile
echo '<!-- Generated by RadioDNS Script by Florian KÃ¶ppl -->' >> $xmlfile
echo '<!-- Updated ' $DATE ' -->' >> $xmlfile
echo "<root>" >> $xmlfile

# create csv header
echo BearerID,Service Label,Ensemble Label,Name Srv,EPG Server,SI URL,EPG URL > $csvfile

# read id file column wise
while IFS=, read -r col1 col2 col3
do
	SVC_ID="$col1"
	echo ""
	echo "	<Service>" >> $xmlfile
	echo "ID: $SVC_ID"
	echo "		<BearerID>$SVC_ID</BearerID>" >> $xmlfile
	echo "Svc: $col2"
	echo "		<ServiceLabel>$col2</ServiceLabel>" >> $xmlfile
	echo "Ens: $col3"
	echo "		<EnsembleLabel>$col3<EnsembleLabel>" >> $xmlfile
	# Step 1 nslookup of radiodns
	# nslookup 0.15dc.10bc.1e0.dab.radiodns.org | grep -e 'canonical name = ' | sed -e "s/^.*canonical name = //g" | sed 's/.$//' | head -1
	NAME="$(nslookup $SVC_ID.radiodns.org | grep -e 'canonical name = ' | sed -e "s/^.*canonical name = //g" | sed 's/.$//' | head -1)"
	echo "Server: ${NAME}"
	echo "		<DnsServer>${NAME}</DnsServer>" >> $xmlfile
	
	# Step 2 nslookup of radio station server
	EPGSRV=""
	if [ -n "${NAME}" ]; then
		# nslookup -type=SRV "_radioepg._tcp.rdns.radioplayer.de" | grep -e "service =" | sed -e "s/^.*service = ........ //g" | sed 's/.$//'
		EPGSRV="$(nslookup -type=SRV "_radioepg._tcp.${NAME}" | grep -e "service =" | sed -e "s/^.*service = ........ //g" | sed 's/.$//')"
	fi
	echo "EPG Server: ${EPGSRV}"
	echo "		<EpgServer>${EPGSRV}</EpgServer>" >> $xmlfile
	
	# Step 3 composition of SI and EPG URLs
	if [ -n "${EPGSRV}" ]; then
		echo "SI: http://${EPGSRV}/radiodns/spi/3.1/SI.xml"
		echo "		<ServiceInformationUrl>http://${EPGSRV}/radiodns/spi/3.1/SI.xml</ServiceInformationUrl>" >> $xmlfile
		echo "EPG: http://${EPGSRV}/radiodns/epg/XSI.xml"
		echo "		<EpgInformationUrl>http://${EPGSRV}/radiodns/epg/XSI.xml</EpgInformationUrl>" >> $xmlfile
		SIEPGURLS="$(echo http://${EPGSRV}/radiodns/spi/3.1/SI.xml,http://${EPGSRV}/radiodns/epg/XSI.xml)"
	else
		echo "SI: "
		echo "		<ServiceInformationUrl></ServiceInformationUrl>" >> $xmlfile
		echo "EPG: "
		echo "		<EpgInformationUrl></EpgInformationUrl>" >> $xmlfile
		SIEPGURLS="$(echo ,)"
	fi		
		
	echo "	</Service>" >> $xmlfile
	
	# output csv
	echo $SVC_ID,$col2,$col3,$NAME,$EPGSRV,$SIEPGURLS >> $csvfile
	
done < "$idfile"

echo "</root>" >> $xmlfile

